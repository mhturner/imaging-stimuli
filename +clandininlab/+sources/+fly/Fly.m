classdef Fly < clandininlab.sources.Subject

    methods

        function obj = Fly()
            import symphonyui.core.*;
            
            obj.addProperty('time', datestr(now), ...
                'type', PropertyType('char', 'row', 'datestr'), ...
                'description', 'Time the preparation was prepared');
            obj.addProperty('preparation', '', ...
                'type', PropertyType('char', 'row', {'', 'Optic lobe (L)', 'Optic lobe (R)', 'Whole Brain'}), ...
                'isPreferred', false);

            obj.addProperty('indicator1', {}, ...
                'type', PropertyType('cellstr', 'row', {'GCaMP6f','GCaMP6m'}), ...
                'description', 'Fluorescent indicator # 1');
            obj.addProperty('driver1', {}, ...
                'type', PropertyType('cellstr', 'row', {'Dhh22 (L2)',' (LC24)'}), ...
                'description', 'Genetic driver #1');
            
            obj.addProperty('indicator2', {}, ...
                'type', PropertyType('cellstr', 'row', {'GCaMP6f','GCaMP6m'}), ...
                'description', 'Fluorescent indicator # 2');
            obj.addProperty('driver2', {}, ...
                'type', PropertyType('cellstr', 'row', {'Dhh22 (L2)',' (LC24)'}), ...
                'description', 'Genetic driver #2');
            
            obj.addAllowableParentType([]);
        end

    end

end
